/* tslint:disable */
/* eslint-disable */
/**
 * HelpDeskAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ModelUser } from './ModelUser';
import {
    ModelUserFromJSON,
    ModelUserFromJSONTyped,
    ModelUserToJSON,
} from './ModelUser';

/**
 * 
 * @export
 * @interface ModelUserListResponse
 */
export interface ModelUserListResponse {
    /**
     * 
     * @type {number}
     * @memberof ModelUserListResponse
     */
    errorCode?: number;
    /**
     * 
     * @type {string}
     * @memberof ModelUserListResponse
     */
    errorMessage?: string | null;
    /**
     * 
     * @type {Array<ModelUser>}
     * @memberof ModelUserListResponse
     */
    result?: Array<ModelUser> | null;
}

/**
 * Check if a given object implements the ModelUserListResponse interface.
 */
export function instanceOfModelUserListResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ModelUserListResponseFromJSON(json: any): ModelUserListResponse {
    return ModelUserListResponseFromJSONTyped(json, false);
}

export function ModelUserListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelUserListResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'errorCode': !exists(json, 'errorCode') ? undefined : json['errorCode'],
        'errorMessage': !exists(json, 'errorMessage') ? undefined : json['errorMessage'],
        'result': !exists(json, 'result') ? undefined : (json['result'] === null ? null : (json['result'] as Array<any>).map(ModelUserFromJSON)),
    };
}

export function ModelUserListResponseToJSON(value?: ModelUserListResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'errorCode': value.errorCode,
        'errorMessage': value.errorMessage,
        'result': value.result === undefined ? undefined : (value.result === null ? null : (value.result as Array<any>).map(ModelUserToJSON)),
    };
}

