/* tslint:disable */
/* eslint-disable */
/**
 * HelpDeskAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LoginResponse } from './LoginResponse';
import {
    LoginResponseFromJSON,
    LoginResponseFromJSONTyped,
    LoginResponseToJSON,
} from './LoginResponse';

/**
 * 
 * @export
 * @interface LoginResponseResponse
 */
export interface LoginResponseResponse {
    /**
     * 
     * @type {number}
     * @memberof LoginResponseResponse
     */
    errorCode?: number;
    /**
     * 
     * @type {string}
     * @memberof LoginResponseResponse
     */
    errorMessage?: string | null;
    /**
     * 
     * @type {LoginResponse}
     * @memberof LoginResponseResponse
     */
    result?: LoginResponse;
}

/**
 * Check if a given object implements the LoginResponseResponse interface.
 */
export function instanceOfLoginResponseResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LoginResponseResponseFromJSON(json: any): LoginResponseResponse {
    return LoginResponseResponseFromJSONTyped(json, false);
}

export function LoginResponseResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LoginResponseResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'errorCode': !exists(json, 'errorCode') ? undefined : json['errorCode'],
        'errorMessage': !exists(json, 'errorMessage') ? undefined : json['errorMessage'],
        'result': !exists(json, 'result') ? undefined : LoginResponseFromJSON(json['result']),
    };
}

export function LoginResponseResponseToJSON(value?: LoginResponseResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'errorCode': value.errorCode,
        'errorMessage': value.errorMessage,
        'result': LoginResponseToJSON(value.result),
    };
}

