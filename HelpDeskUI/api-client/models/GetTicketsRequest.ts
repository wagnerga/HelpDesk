/* tslint:disable */
/* eslint-disable */
/**
 * HelpDeskAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ModelSortColumn } from './ModelSortColumn';
import {
    ModelSortColumnFromJSON,
    ModelSortColumnFromJSONTyped,
    ModelSortColumnToJSON,
} from './ModelSortColumn';
import type { TicketStatus } from './TicketStatus';
import {
    TicketStatusFromJSON,
    TicketStatusFromJSONTyped,
    TicketStatusToJSON,
} from './TicketStatus';

/**
 * 
 * @export
 * @interface GetTicketsRequest
 */
export interface GetTicketsRequest {
    /**
     * 
     * @type {number}
     * @memberof GetTicketsRequest
     */
    skip: number;
    /**
     * 
     * @type {Array<ModelSortColumn>}
     * @memberof GetTicketsRequest
     */
    sortColumns: Array<ModelSortColumn>;
    /**
     * 
     * @type {TicketStatus}
     * @memberof GetTicketsRequest
     */
    status?: TicketStatus;
    /**
     * 
     * @type {number}
     * @memberof GetTicketsRequest
     */
    take: number;
}

/**
 * Check if a given object implements the GetTicketsRequest interface.
 */
export function instanceOfGetTicketsRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "skip" in value;
    isInstance = isInstance && "sortColumns" in value;
    isInstance = isInstance && "take" in value;

    return isInstance;
}

export function GetTicketsRequestFromJSON(json: any): GetTicketsRequest {
    return GetTicketsRequestFromJSONTyped(json, false);
}

export function GetTicketsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetTicketsRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'skip': json['skip'],
        'sortColumns': ((json['sortColumns'] as Array<any>).map(ModelSortColumnFromJSON)),
        'status': !exists(json, 'status') ? undefined : TicketStatusFromJSON(json['status']),
        'take': json['take'],
    };
}

export function GetTicketsRequestToJSON(value?: GetTicketsRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'skip': value.skip,
        'sortColumns': ((value.sortColumns as Array<any>).map(ModelSortColumnToJSON)),
        'status': TicketStatusToJSON(value.status),
        'take': value.take,
    };
}

